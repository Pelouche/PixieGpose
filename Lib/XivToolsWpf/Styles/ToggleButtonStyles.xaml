<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
					xmlns:converters="clr-namespace:XivToolsWpf.Converters">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
		<ResourceDictionary>
			<converters:MaterialDesignBorderClipConverter x:Key="BorderClipConverter" />
		</ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="{x:Type ToggleButton}" x:Key="TransparentToggleButton">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinWidth" Value="20"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Grid TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}" Cursor="Hand">
						<Border Background="{DynamicResource MaterialDesignCardBackground}" x:Name="HoverBorder" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignCardBackground}" Opacity="0">
							<Border.Effect>
								<DropShadowEffect ShadowDepth="0" BlurRadius="5" Opacity="0.5"/>
							</Border.Effect>
						</Border>

						<Border Background="{TemplateBinding Background}" x:Name="Border" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>

						<md:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
									ContentStringFormat="{TemplateBinding ContentStringFormat}"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							
							<md:Ripple.Clip>
								<MultiBinding Converter="{StaticResource BorderClipConverter}">
									<Binding ElementName="Border" Path="ActualWidth" />
									<Binding ElementName="Border" Path="ActualHeight" />
									<Binding ElementName="Border" Path="CornerRadius" />
									<Binding ElementName="Border" Path="BorderThickness" />
								</MultiBinding>
							</md:Ripple.Clip>
							
						</md:Ripple>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Opacity" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ToggleButton}" x:Key="OutlineToggleButton">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinWidth" Value="20"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Grid TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}" Cursor="Hand">
						<Border Background="{DynamicResource MaterialDesignCardBackground}" x:Name="HoverBorder" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignCardBackground}" Opacity="0">
							<Border.Effect>
								<DropShadowEffect ShadowDepth="0" BlurRadius="5" Opacity="0.5"/>
							</Border.Effect>
						</Border>

						<Border Background="{TemplateBinding Background}" x:Name="Border" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>

						<md:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
									ContentStringFormat="{TemplateBinding ContentStringFormat}"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								    md:RippleAssist.ClipToBounds="False">
							
							<md:Ripple.Clip>
								<MultiBinding Converter="{StaticResource BorderClipConverter}">
									<Binding ElementName="Border" Path="ActualWidth" />
									<Binding ElementName="Border" Path="ActualHeight" />
									<Binding ElementName="Border" Path="CornerRadius" />
									<Binding ElementName="Border" Path="BorderThickness" />
								</MultiBinding>
							</md:Ripple.Clip>
							
						</md:Ripple>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Opacity" Value="0"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
							<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ToggleButton" x:Key="RoundToggleButton">

		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
		<Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Cursor="Hand">

						<Ellipse Name="HoverEllipse" Fill="Transparent" Stroke="{TemplateBinding Background}" StrokeThickness="1" />
						<Ellipse Name="CheckedEllipse" Fill="{TemplateBinding Background}" RenderTransformOrigin="0.5, 0.5">
							<Ellipse.RenderTransform>
								<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="0" ScaleY="0" x:Name="CheckedEllipseScale" />
							</Ellipse.RenderTransform>
						</Ellipse>

						<ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale">
											<LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0" />
											<LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale">
											<LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0" />
											<LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale">
											<LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
											<LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale">
											<LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
											<LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>

							<Setter Property="Foreground" Value="Black"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ToggleButton" x:Key="TransparentIconToggleButton">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="6, 0, 6, 6"/>
		<Setter Property="MinWidth" Value="18"/>
		<Setter Property="MinHeight" Value="18"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">

					<Grid TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}" Cursor="Hand">
						<Border x:Name="HoverBorder" Style="{DynamicResource Panel}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

						<Border x:Name="Border"
								Opacity="0"
								BorderBrush="{TemplateBinding Background}"
								BorderThickness="0"
								Background="{TemplateBinding BorderBrush}"
								SnapsToDevicePixels="True"
								CornerRadius="1"
								Height="2"
								VerticalAlignment="Bottom"
								Margin="6, 0, 6, 3" />

						<ContentControl x:Name="Content"
										Content="{TemplateBinding Content}"
										ContentTemplate="{TemplateBinding ContentTemplate}"
										Focusable="False"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										Padding="{TemplateBinding Padding}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

						<md:Ripple md:RippleAssist.ClipToBounds="False">
							<md:Ripple.Clip>
								<MultiBinding Converter="{StaticResource BorderClipConverter}">
									<Binding ElementName="HoverBorder" Path="ActualWidth" />
									<Binding ElementName="HoverBorder" Path="ActualHeight" />
									<Binding ElementName="HoverBorder" Path="CornerRadius" />
									<Binding ElementName="HoverBorder" Path="BorderThickness" />
								</MultiBinding>
							</md:Ripple.Clip>
						</md:Ripple>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="0"
														 To="1"
														 Duration="00:00:00.1"
														 Storyboard.TargetName="HoverBorder"
														 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="1"
														 To="0"
														 Duration="00:00:00.2"
														 Storyboard.TargetName="HoverBorder"
														 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>

						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
							<Setter TargetName="Border"
									Property="Opacity"
									Value="1.0" />

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00"
																		  Storyboard.TargetName="Content"
																		  Storyboard.TargetProperty="Margin">
											<SplineThicknessKeyFrame KeyTime="00:00:00.00"
																	 Value="6, 0, 6, 0" />
											<SplineThicknessKeyFrame KeyTime="00:00:00.10"
																	 Value="6, 0, 6, 8" />
											<SplineThicknessKeyFrame KeyTime="00:00:00.15"
																	 Value="6, 0, 6, 5" />
											<SplineThicknessKeyFrame KeyTime="00:00:00.18"
																	 Value="6, 0, 6, 6" />
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation From="6, 0, 6, 6"
															To="6, 0, 6, 0" 
															Duration="00:00:00.30"
															Storyboard.TargetName="Content" 
															Storyboard.TargetProperty="Margin">
											<ThicknessAnimation.EasingFunction>
												<SineEase />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="1"
														 To="0.5"
														 Duration="00:00:00.1"
														 Storyboard.TargetName="Content"
														 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="0.5"
														 To="1"
														 Duration="00:00:00.2"
														 Storyboard.TargetName="Content"
														 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ToggleButton" x:Key="InvisibleToggleButton">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">

					<Grid TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}" Cursor="Hand">

						<md:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
									ContentStringFormat="{TemplateBinding ContentStringFormat}"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						</md:Ripple>

					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>